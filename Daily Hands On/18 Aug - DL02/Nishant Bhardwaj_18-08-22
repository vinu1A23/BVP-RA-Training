{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Day3.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "zoBSHiIr7VSp"
      },
      "outputs": [],
      "source": [
        "import math\n",
        "\n",
        "#sigmoid(0,1)\n",
        "def sigmoid(x):\n",
        "  return (1.0/(1.0+math.exp(-x)))\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sigmoid(45.8)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RGFl_53_F2hE",
        "outputId": "b6bafad8-70d6-4441-afd6-9fc765d775a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#tanh(-1,1)\n",
        "\n",
        "def tanh(x):\n",
        "  return (math.exp(x)-math.exp(-x))/(math.exp(x)+math.exp(-x))"
      ],
      "metadata": {
        "id": "DyifFEVBGfrU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tanh(350)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jdLjsVuhHXfR",
        "outputId": "441572e0-877b-4425-c92b-3d18b1dbe029"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#relu\n",
        "\n",
        "def relu(x):\n",
        "  return max(0.0,x)\n"
      ],
      "metadata": {
        "id": "e8CKtQ-WHaxQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "relu(-50)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9br0l85YK5Uq",
        "outputId": "aecc070e-5e22-4041-810b-2e51e3c19150"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#leaky relu\n",
        "\n",
        "def leaky_relu(x):\n",
        "  return max(0.1*x, x)"
      ],
      "metadata": {
        "id": "qMvUTNllK62f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "leaky_relu(-1.45)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PRuwpEdcLXE3",
        "outputId": "b441ad8c-747d-46eb-fe1b-ce08f2bfdcb8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-0.145"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "sYaVCrUxcS_R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def sigmoid(x):\n",
        "  return (1.0/(1.0+np.exp(-x)))\n",
        "input=np.linspace(-10,10,100)\n",
        "plt.plot(input, sigmoid(input))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "2s87qWLbLa8V",
        "outputId": "eb135547-39c4-4049-ecc2-5ee3a829a9e8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f735b8f7d50>]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def tanh(x):\n",
        "  return (np.exp(x)-np.exp(-x))/(np.exp(x)+np.exp(-x))\n",
        "  \n",
        "input=np.linspace(-10,10,100)\n",
        "plt.plot(input, tanh(input))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "coYBlAURPpQO",
        "outputId": "88bd9c84-89a9-47f4-efff-709a0348a935"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f4d01077550>]"
            ]
          },
          "metadata": {},
          "execution_count": 5
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def ReLU(x):\n",
        "  data = [max(0,value) for value in x]\n",
        "  return np.array(data)\n",
        "plt.plot(input, ReLU(input), c=\"r\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "fUWdbqPlQ25z",
        "outputId": "f59836ff-3c72-4860-8065-3650fa07b538"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f735b335b10>]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def LeakyRelu(x):\n",
        "  data=[max(0.1*value, value) for value in x]\n",
        "  return np.array(data)\n",
        "plt.plot(input, LeakyRelu(input), c=\"b\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "jZUL8jRicD7S",
        "outputId": "c8ddfd76-49f9-4fd1-e716-16f8ea610cdd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f735b1edc50>]"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "57esXuANcXN6"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}